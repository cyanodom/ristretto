Terminals unused in grammar

    BOOL_TYPE
    STR_TYPE
    FLOAT_TYPE
    INT_TYPE


Grammar

    0 $accept: B_FULL_TEXT $end

    1 B_FULL_TEXT: B_DELIM B_TEXT

    2 B_TEXT: B_ROOT_CODE_BLOCK B_DEF_FUN_MAIN
    3       | B_DEF_FUN_MAIN B_ROOT_CODE_BLOCK
    4       | B_DEF_FUN_MAIN

    5 B_ROOT_CODE_BLOCK: B_ANYWAY_ROOT B_ROOT_CODE_BLOCK
    6                  | B_ANYWAY_ROOT

    7 B_ANYWAY_ROOT: B_INSTANCIATION B_END_OP
    8              | B_DEF_FUN

    9 B_INSTANCIATION: B_TYPE B_IDENT B_OPERATOR_SET B_OPERATION

   10 B_CHANGE_VALUE: B_IDENT B_OPERATOR_SET B_OPERATION

   11 B_INSTRUCTION: B_INST B_OPERATION

   12 B_CODE_BLOCK: B_ANYWAY B_CODE_BLOCK
   13             | %empty

   14 B_ANYWAY: B_BLOCK_FOR
   15         | B_BLOCK_WHILE
   16         | B_BLOCK_IF
   17         | B_INSTRUCTION B_END_OP
   18         | B_INSTANCIATION B_END_OP
   19         | B_FUNCTION B_END_OP

   20 B_CONDITION: B_OPERATION
   21            | B_OPERATION B_CP_NUM B_OPERATION

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION B_END_OP B_CONDITION B_END_OP B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

   23 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET
   24           | B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

   25 B_BLOCK_WHILE: B_INST_WHILE B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

   26 B_OPERATION: B_OPERATION OP_NUM B_DELIM B_OPERATION
   27            | B_OPE_PAREN B_OPERATION B_CLO_PAREN
   28            | B_RVALUE

   29 B_RVALUE: B_IDENT
   30         | B_FUNCTION

   31 B_FUNCTION: IDENT B_OPE_PAREN B_FUN_ARGS B_CLO_PAREN

   32 B_DEF_FUN: B_TYPE IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET
   33          | IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

   34 B_DEF_FUN_ARGS: B_DEF_FUN_ARGS_HERE
   35               | B_TYPE_VOID

   36 B_DEF_FUN_ARGS_HERE: B_TYPE B_IDENT B_COMMA B_DEF_FUN_ARGS_HERE
   37                    | B_TYPE B_IDENT

   38 B_DEF_FUN_MAIN: B_TYPE_VOID FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

   39 B_FUN_ARGS: B_OPERATION B_COMMA B_FUN_ARGS
   40           | B_OPERATION

   41 B_CP_NUM: CP_NUM B_DELIM

   42 B_OPE_BRACKET: OPE_BRACKET B_DELIM

   43 B_CLO_BRACKET: CLO_BRACKET B_DELIM

   44 B_INST_IF: INST_IF B_DELIM

   45 B_INST_ELSE: INST_ELSE B_DELIM

   46 B_INST_WHILE: INST_WHILE B_DELIM

   47 B_INST_FOR: INST_FOR B_DELIM

   48 B_END_OP: END_OP B_DELIM

   49 B_INST: INST B_DELIM

   50 B_COMMA: COMMA B_DELIM

   51 B_OPE_PAREN: OPE_PAREN B_DELIM

   52 B_CLO_PAREN: CLO_PAREN B_DELIM

   53 B_OPERATOR_SET: OP_SET B_DELIM

   54 B_IDENT: IDENT B_DELIM

   55 B_TYPE_VOID: TYPE_VOID B_DELIM

   56 B_TYPE: TYPE B_DELIM

   57 B_DELIM: DELIM B_DELIM
   58        | %empty
   59        | SHORT_COMMENT
   60        | LONG_COMMENT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DELIM (258) 57
    END_OP (259) 48
    TYPE <type_type> (260) 56
    TYPE_VOID (261) 55
    FUN_MAIN (262) 38
    INST <inst_type> (263) 49
    INST_IF (264) 44
    INST_ELSE (265) 45
    INST_WHILE (266) 46
    INST_FOR (267) 47
    OP_NUM <oper_num_type> (268) 26
    OP_SET (269) 53
    CP_NUM <cp_num_type> (270) 41
    OPE_PAREN (271) 51
    CLO_PAREN (272) 52
    OPE_BRACKET (273) 42
    CLO_BRACKET (274) 43
    BOOL_TYPE <b_val> (275)
    IDENT <indent_name> (276) 31 32 33 54
    STR_TYPE <s_val> (277)
    FLOAT_TYPE <f_val> (278)
    INT_TYPE <i_val> (279)
    LONG_COMMENT (280) 60
    SHORT_COMMENT (281) 59
    COMMA (282) 50


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    B_FULL_TEXT (29)
        on left: 1
        on right: 0
    B_TEXT (30)
        on left: 2 3 4
        on right: 1
    B_ROOT_CODE_BLOCK (31)
        on left: 5 6
        on right: 2 3 5
    B_ANYWAY_ROOT (32)
        on left: 7 8
        on right: 5 6
    B_INSTANCIATION (33)
        on left: 9
        on right: 7 18 22
    B_CHANGE_VALUE (34)
        on left: 10
        on right: 22
    B_INSTRUCTION (35)
        on left: 11
        on right: 17
    B_CODE_BLOCK (36)
        on left: 12 13
        on right: 12 22 23 24 25 32 33 38
    B_ANYWAY (37)
        on left: 14 15 16 17 18 19
        on right: 12
    B_CONDITION (38)
        on left: 20 21
        on right: 22 23 24 25
    B_BLOCK_FOR (39)
        on left: 22
        on right: 14
    B_BLOCK_IF (40)
        on left: 23 24
        on right: 16
    B_BLOCK_WHILE (41)
        on left: 25
        on right: 15
    B_OPERATION (42)
        on left: 26 27 28
        on right: 9 10 11 20 21 26 27 39 40
    B_RVALUE (43)
        on left: 29 30
        on right: 28
    B_FUNCTION (44)
        on left: 31
        on right: 19 30
    B_DEF_FUN (45)
        on left: 32 33
        on right: 8
    B_DEF_FUN_ARGS (46)
        on left: 34 35
        on right: 32 33
    B_DEF_FUN_ARGS_HERE (47)
        on left: 36 37
        on right: 34 36
    B_DEF_FUN_MAIN (48)
        on left: 38
        on right: 2 3 4
    B_FUN_ARGS (49)
        on left: 39 40
        on right: 31 39
    B_CP_NUM (50)
        on left: 41
        on right: 21
    B_OPE_BRACKET (51)
        on left: 42
        on right: 22 23 24 25 32 33 38
    B_CLO_BRACKET (52)
        on left: 43
        on right: 22 23 24 25 32 33 38
    B_INST_IF (53)
        on left: 44
        on right: 23 24
    B_INST_ELSE (54)
        on left: 45
        on right: 24
    B_INST_WHILE (55)
        on left: 46
        on right: 25
    B_INST_FOR (56)
        on left: 47
        on right: 22
    B_END_OP (57)
        on left: 48
        on right: 7 17 18 19 22
    B_INST (58)
        on left: 49
        on right: 11
    B_COMMA (59)
        on left: 50
        on right: 36 39
    B_OPE_PAREN (60)
        on left: 51
        on right: 22 23 24 25 27 31 32 33 38
    B_CLO_PAREN (61)
        on left: 52
        on right: 22 23 24 25 27 31 32 33 38
    B_OPERATOR_SET (62)
        on left: 53
        on right: 9 10
    B_IDENT (63)
        on left: 54
        on right: 9 10 29 36 37
    B_TYPE_VOID (64)
        on left: 55
        on right: 35 38
    B_TYPE <type_type> (65)
        on left: 56
        on right: 9 32 36 37
    B_DELIM (66)
        on left: 57 58 59 60
        on right: 1 26 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57


State 0

    0 $accept: . B_FULL_TEXT $end

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_FULL_TEXT  go to state 4
    B_DELIM      go to state 5


State 1

   57 B_DELIM: DELIM . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 6


State 2

   60 B_DELIM: LONG_COMMENT .

    $default  reduce using rule 60 (B_DELIM)


State 3

   59 B_DELIM: SHORT_COMMENT .

    $default  reduce using rule 59 (B_DELIM)


State 4

    0 $accept: B_FULL_TEXT . $end

    $end  shift, and go to state 7


State 5

    1 B_FULL_TEXT: B_DELIM . B_TEXT

    TYPE       shift, and go to state 8
    TYPE_VOID  shift, and go to state 9
    IDENT      shift, and go to state 10

    B_TEXT             go to state 11
    B_ROOT_CODE_BLOCK  go to state 12
    B_ANYWAY_ROOT      go to state 13
    B_INSTANCIATION    go to state 14
    B_DEF_FUN          go to state 15
    B_DEF_FUN_MAIN     go to state 16
    B_TYPE_VOID        go to state 17
    B_TYPE             go to state 18


State 6

   57 B_DELIM: DELIM B_DELIM .

    $default  reduce using rule 57 (B_DELIM)


State 7

    0 $accept: B_FULL_TEXT $end .

    $default  accept


State 8

   56 B_TYPE: TYPE . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 19


State 9

   55 B_TYPE_VOID: TYPE_VOID . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 20


State 10

   33 B_DEF_FUN: IDENT . B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21

    B_OPE_PAREN  go to state 22


State 11

    1 B_FULL_TEXT: B_DELIM B_TEXT .

    $default  reduce using rule 1 (B_FULL_TEXT)


State 12

    2 B_TEXT: B_ROOT_CODE_BLOCK . B_DEF_FUN_MAIN

    TYPE_VOID  shift, and go to state 9

    B_DEF_FUN_MAIN  go to state 23
    B_TYPE_VOID     go to state 17


State 13

    5 B_ROOT_CODE_BLOCK: B_ANYWAY_ROOT . B_ROOT_CODE_BLOCK
    6                  | B_ANYWAY_ROOT .

    TYPE   shift, and go to state 8
    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (B_ROOT_CODE_BLOCK)

    B_ROOT_CODE_BLOCK  go to state 24
    B_ANYWAY_ROOT      go to state 13
    B_INSTANCIATION    go to state 14
    B_DEF_FUN          go to state 15
    B_TYPE             go to state 18


State 14

    7 B_ANYWAY_ROOT: B_INSTANCIATION . B_END_OP

    END_OP  shift, and go to state 25

    B_END_OP  go to state 26


State 15

    8 B_ANYWAY_ROOT: B_DEF_FUN .

    $default  reduce using rule 8 (B_ANYWAY_ROOT)


State 16

    3 B_TEXT: B_DEF_FUN_MAIN . B_ROOT_CODE_BLOCK
    4       | B_DEF_FUN_MAIN .

    TYPE   shift, and go to state 8
    IDENT  shift, and go to state 10

    $default  reduce using rule 4 (B_TEXT)

    B_ROOT_CODE_BLOCK  go to state 27
    B_ANYWAY_ROOT      go to state 13
    B_INSTANCIATION    go to state 14
    B_DEF_FUN          go to state 15
    B_TYPE             go to state 18


State 17

   38 B_DEF_FUN_MAIN: B_TYPE_VOID . FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    FUN_MAIN  shift, and go to state 28


State 18

    9 B_INSTANCIATION: B_TYPE . B_IDENT B_OPERATOR_SET B_OPERATION
   32 B_DEF_FUN: B_TYPE . IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    IDENT  shift, and go to state 29

    B_IDENT  go to state 30


State 19

   56 B_TYPE: TYPE B_DELIM .

    $default  reduce using rule 56 (B_TYPE)


State 20

   55 B_TYPE_VOID: TYPE_VOID B_DELIM .

    $default  reduce using rule 55 (B_TYPE_VOID)


State 21

   51 B_OPE_PAREN: OPE_PAREN . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 31


State 22

   33 B_DEF_FUN: IDENT B_OPE_PAREN . B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    TYPE       shift, and go to state 8
    TYPE_VOID  shift, and go to state 9

    B_DEF_FUN_ARGS       go to state 32
    B_DEF_FUN_ARGS_HERE  go to state 33
    B_TYPE_VOID          go to state 34
    B_TYPE               go to state 35


State 23

    2 B_TEXT: B_ROOT_CODE_BLOCK B_DEF_FUN_MAIN .

    $default  reduce using rule 2 (B_TEXT)


State 24

    5 B_ROOT_CODE_BLOCK: B_ANYWAY_ROOT B_ROOT_CODE_BLOCK .

    $default  reduce using rule 5 (B_ROOT_CODE_BLOCK)


State 25

   48 B_END_OP: END_OP . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 36


State 26

    7 B_ANYWAY_ROOT: B_INSTANCIATION B_END_OP .

    $default  reduce using rule 7 (B_ANYWAY_ROOT)


State 27

    3 B_TEXT: B_DEF_FUN_MAIN B_ROOT_CODE_BLOCK .

    $default  reduce using rule 3 (B_TEXT)


State 28

   38 B_DEF_FUN_MAIN: B_TYPE_VOID FUN_MAIN . B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21

    B_OPE_PAREN  go to state 37


State 29

   32 B_DEF_FUN: B_TYPE IDENT . B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET
   54 B_IDENT: IDENT . B_DELIM

    DELIM          shift, and go to state 1
    OPE_PAREN      shift, and go to state 21
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_OPE_PAREN  go to state 38
    B_DELIM      go to state 39


State 30

    9 B_INSTANCIATION: B_TYPE B_IDENT . B_OPERATOR_SET B_OPERATION

    OP_SET  shift, and go to state 40

    B_OPERATOR_SET  go to state 41


State 31

   51 B_OPE_PAREN: OPE_PAREN B_DELIM .

    $default  reduce using rule 51 (B_OPE_PAREN)


State 32

   33 B_DEF_FUN: IDENT B_OPE_PAREN B_DEF_FUN_ARGS . B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 42

    B_CLO_PAREN  go to state 43


State 33

   34 B_DEF_FUN_ARGS: B_DEF_FUN_ARGS_HERE .

    $default  reduce using rule 34 (B_DEF_FUN_ARGS)


State 34

   35 B_DEF_FUN_ARGS: B_TYPE_VOID .

    $default  reduce using rule 35 (B_DEF_FUN_ARGS)


State 35

   36 B_DEF_FUN_ARGS_HERE: B_TYPE . B_IDENT B_COMMA B_DEF_FUN_ARGS_HERE
   37                    | B_TYPE . B_IDENT

    IDENT  shift, and go to state 44

    B_IDENT  go to state 45


State 36

   48 B_END_OP: END_OP B_DELIM .

    $default  reduce using rule 48 (B_END_OP)


State 37

   38 B_DEF_FUN_MAIN: B_TYPE_VOID FUN_MAIN B_OPE_PAREN . B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    TYPE_VOID  shift, and go to state 9

    B_TYPE_VOID  go to state 46


State 38

   32 B_DEF_FUN: B_TYPE IDENT B_OPE_PAREN . B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    TYPE       shift, and go to state 8
    TYPE_VOID  shift, and go to state 9

    B_DEF_FUN_ARGS       go to state 47
    B_DEF_FUN_ARGS_HERE  go to state 33
    B_TYPE_VOID          go to state 34
    B_TYPE               go to state 35


State 39

   54 B_IDENT: IDENT B_DELIM .

    $default  reduce using rule 54 (B_IDENT)


State 40

   53 B_OPERATOR_SET: OP_SET . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 48


State 41

    9 B_INSTANCIATION: B_TYPE B_IDENT B_OPERATOR_SET . B_OPERATION

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_OPERATION  go to state 50
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 42

   52 B_CLO_PAREN: CLO_PAREN . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 55


State 43

   33 B_DEF_FUN: IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN . B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 57


State 44

   54 B_IDENT: IDENT . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 39


State 45

   36 B_DEF_FUN_ARGS_HERE: B_TYPE B_IDENT . B_COMMA B_DEF_FUN_ARGS_HERE
   37                    | B_TYPE B_IDENT .

    COMMA  shift, and go to state 58

    $default  reduce using rule 37 (B_DEF_FUN_ARGS_HERE)

    B_COMMA  go to state 59


State 46

   38 B_DEF_FUN_MAIN: B_TYPE_VOID FUN_MAIN B_OPE_PAREN B_TYPE_VOID . B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 42

    B_CLO_PAREN  go to state 60


State 47

   32 B_DEF_FUN: B_TYPE IDENT B_OPE_PAREN B_DEF_FUN_ARGS . B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 42

    B_CLO_PAREN  go to state 61


State 48

   53 B_OPERATOR_SET: OP_SET B_DELIM .

    $default  reduce using rule 53 (B_OPERATOR_SET)


State 49

   31 B_FUNCTION: IDENT . B_OPE_PAREN B_FUN_ARGS B_CLO_PAREN
   54 B_IDENT: IDENT . B_DELIM

    DELIM          shift, and go to state 1
    OPE_PAREN      shift, and go to state 21
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_OPE_PAREN  go to state 62
    B_DELIM      go to state 39


State 50

    9 B_INSTANCIATION: B_TYPE B_IDENT B_OPERATOR_SET B_OPERATION .
   26 B_OPERATION: B_OPERATION . OP_NUM B_DELIM B_OPERATION

    OP_NUM  shift, and go to state 63

    $default  reduce using rule 9 (B_INSTANCIATION)


State 51

   28 B_OPERATION: B_RVALUE .

    $default  reduce using rule 28 (B_OPERATION)


State 52

   30 B_RVALUE: B_FUNCTION .

    $default  reduce using rule 30 (B_RVALUE)


State 53

   27 B_OPERATION: B_OPE_PAREN . B_OPERATION B_CLO_PAREN

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_OPERATION  go to state 64
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 54

   29 B_RVALUE: B_IDENT .

    $default  reduce using rule 29 (B_RVALUE)


State 55

   52 B_CLO_PAREN: CLO_PAREN B_DELIM .

    $default  reduce using rule 52 (B_CLO_PAREN)


State 56

   42 B_OPE_BRACKET: OPE_BRACKET . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 65


State 57

   33 B_DEF_FUN: IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET . B_CODE_BLOCK B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 66
    INST_IF     shift, and go to state 67
    INST_WHILE  shift, and go to state 68
    INST_FOR    shift, and go to state 69
    IDENT       shift, and go to state 70

    $default  reduce using rule 13 (B_CODE_BLOCK)

    B_INSTANCIATION  go to state 71
    B_INSTRUCTION    go to state 72
    B_CODE_BLOCK     go to state 73
    B_ANYWAY         go to state 74
    B_BLOCK_FOR      go to state 75
    B_BLOCK_IF       go to state 76
    B_BLOCK_WHILE    go to state 77
    B_FUNCTION       go to state 78
    B_INST_IF        go to state 79
    B_INST_WHILE     go to state 80
    B_INST_FOR       go to state 81
    B_INST           go to state 82
    B_TYPE           go to state 83


State 58

   50 B_COMMA: COMMA . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 84


State 59

   36 B_DEF_FUN_ARGS_HERE: B_TYPE B_IDENT B_COMMA . B_DEF_FUN_ARGS_HERE

    TYPE  shift, and go to state 8

    B_DEF_FUN_ARGS_HERE  go to state 85
    B_TYPE               go to state 35


State 60

   38 B_DEF_FUN_MAIN: B_TYPE_VOID FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN . B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 86


State 61

   32 B_DEF_FUN: B_TYPE IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN . B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 87


State 62

   31 B_FUNCTION: IDENT B_OPE_PAREN . B_FUN_ARGS B_CLO_PAREN

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_OPERATION  go to state 88
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_FUN_ARGS   go to state 89
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 63

   26 B_OPERATION: B_OPERATION OP_NUM . B_DELIM B_OPERATION

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 90


State 64

   26 B_OPERATION: B_OPERATION . OP_NUM B_DELIM B_OPERATION
   27            | B_OPE_PAREN B_OPERATION . B_CLO_PAREN

    OP_NUM     shift, and go to state 63
    CLO_PAREN  shift, and go to state 42

    B_CLO_PAREN  go to state 91


State 65

   42 B_OPE_BRACKET: OPE_BRACKET B_DELIM .

    $default  reduce using rule 42 (B_OPE_BRACKET)


State 66

   49 B_INST: INST . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 92


State 67

   44 B_INST_IF: INST_IF . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 93


State 68

   46 B_INST_WHILE: INST_WHILE . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 94


State 69

   47 B_INST_FOR: INST_FOR . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 95


State 70

   31 B_FUNCTION: IDENT . B_OPE_PAREN B_FUN_ARGS B_CLO_PAREN

    OPE_PAREN  shift, and go to state 21

    B_OPE_PAREN  go to state 62


State 71

   18 B_ANYWAY: B_INSTANCIATION . B_END_OP

    END_OP  shift, and go to state 25

    B_END_OP  go to state 96


State 72

   17 B_ANYWAY: B_INSTRUCTION . B_END_OP

    END_OP  shift, and go to state 25

    B_END_OP  go to state 97


State 73

   33 B_DEF_FUN: IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 98

    B_CLO_BRACKET  go to state 99


State 74

   12 B_CODE_BLOCK: B_ANYWAY . B_CODE_BLOCK

    TYPE        shift, and go to state 8
    INST        shift, and go to state 66
    INST_IF     shift, and go to state 67
    INST_WHILE  shift, and go to state 68
    INST_FOR    shift, and go to state 69
    IDENT       shift, and go to state 70

    $default  reduce using rule 13 (B_CODE_BLOCK)

    B_INSTANCIATION  go to state 71
    B_INSTRUCTION    go to state 72
    B_CODE_BLOCK     go to state 100
    B_ANYWAY         go to state 74
    B_BLOCK_FOR      go to state 75
    B_BLOCK_IF       go to state 76
    B_BLOCK_WHILE    go to state 77
    B_FUNCTION       go to state 78
    B_INST_IF        go to state 79
    B_INST_WHILE     go to state 80
    B_INST_FOR       go to state 81
    B_INST           go to state 82
    B_TYPE           go to state 83


State 75

   14 B_ANYWAY: B_BLOCK_FOR .

    $default  reduce using rule 14 (B_ANYWAY)


State 76

   16 B_ANYWAY: B_BLOCK_IF .

    $default  reduce using rule 16 (B_ANYWAY)


State 77

   15 B_ANYWAY: B_BLOCK_WHILE .

    $default  reduce using rule 15 (B_ANYWAY)


State 78

   19 B_ANYWAY: B_FUNCTION . B_END_OP

    END_OP  shift, and go to state 25

    B_END_OP  go to state 101


State 79

   23 B_BLOCK_IF: B_INST_IF . B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET
   24           | B_INST_IF . B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21

    B_OPE_PAREN  go to state 102


State 80

   25 B_BLOCK_WHILE: B_INST_WHILE . B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21

    B_OPE_PAREN  go to state 103


State 81

   22 B_BLOCK_FOR: B_INST_FOR . B_OPE_PAREN B_INSTANCIATION B_END_OP B_CONDITION B_END_OP B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21

    B_OPE_PAREN  go to state 104


State 82

   11 B_INSTRUCTION: B_INST . B_OPERATION

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_OPERATION  go to state 105
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 83

    9 B_INSTANCIATION: B_TYPE . B_IDENT B_OPERATOR_SET B_OPERATION

    IDENT  shift, and go to state 44

    B_IDENT  go to state 30


State 84

   50 B_COMMA: COMMA B_DELIM .

    $default  reduce using rule 50 (B_COMMA)


State 85

   36 B_DEF_FUN_ARGS_HERE: B_TYPE B_IDENT B_COMMA B_DEF_FUN_ARGS_HERE .

    $default  reduce using rule 36 (B_DEF_FUN_ARGS_HERE)


State 86

   38 B_DEF_FUN_MAIN: B_TYPE_VOID FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET . B_CODE_BLOCK B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 66
    INST_IF     shift, and go to state 67
    INST_WHILE  shift, and go to state 68
    INST_FOR    shift, and go to state 69
    IDENT       shift, and go to state 70

    $default  reduce using rule 13 (B_CODE_BLOCK)

    B_INSTANCIATION  go to state 71
    B_INSTRUCTION    go to state 72
    B_CODE_BLOCK     go to state 106
    B_ANYWAY         go to state 74
    B_BLOCK_FOR      go to state 75
    B_BLOCK_IF       go to state 76
    B_BLOCK_WHILE    go to state 77
    B_FUNCTION       go to state 78
    B_INST_IF        go to state 79
    B_INST_WHILE     go to state 80
    B_INST_FOR       go to state 81
    B_INST           go to state 82
    B_TYPE           go to state 83


State 87

   32 B_DEF_FUN: B_TYPE IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET . B_CODE_BLOCK B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 66
    INST_IF     shift, and go to state 67
    INST_WHILE  shift, and go to state 68
    INST_FOR    shift, and go to state 69
    IDENT       shift, and go to state 70

    $default  reduce using rule 13 (B_CODE_BLOCK)

    B_INSTANCIATION  go to state 71
    B_INSTRUCTION    go to state 72
    B_CODE_BLOCK     go to state 107
    B_ANYWAY         go to state 74
    B_BLOCK_FOR      go to state 75
    B_BLOCK_IF       go to state 76
    B_BLOCK_WHILE    go to state 77
    B_FUNCTION       go to state 78
    B_INST_IF        go to state 79
    B_INST_WHILE     go to state 80
    B_INST_FOR       go to state 81
    B_INST           go to state 82
    B_TYPE           go to state 83


State 88

   26 B_OPERATION: B_OPERATION . OP_NUM B_DELIM B_OPERATION
   39 B_FUN_ARGS: B_OPERATION . B_COMMA B_FUN_ARGS
   40           | B_OPERATION .

    OP_NUM  shift, and go to state 63
    COMMA   shift, and go to state 58

    $default  reduce using rule 40 (B_FUN_ARGS)

    B_COMMA  go to state 108


State 89

   31 B_FUNCTION: IDENT B_OPE_PAREN B_FUN_ARGS . B_CLO_PAREN

    CLO_PAREN  shift, and go to state 42

    B_CLO_PAREN  go to state 109


State 90

   26 B_OPERATION: B_OPERATION OP_NUM B_DELIM . B_OPERATION

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_OPERATION  go to state 110
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 91

   27 B_OPERATION: B_OPE_PAREN B_OPERATION B_CLO_PAREN .

    $default  reduce using rule 27 (B_OPERATION)


State 92

   49 B_INST: INST B_DELIM .

    $default  reduce using rule 49 (B_INST)


State 93

   44 B_INST_IF: INST_IF B_DELIM .

    $default  reduce using rule 44 (B_INST_IF)


State 94

   46 B_INST_WHILE: INST_WHILE B_DELIM .

    $default  reduce using rule 46 (B_INST_WHILE)


State 95

   47 B_INST_FOR: INST_FOR B_DELIM .

    $default  reduce using rule 47 (B_INST_FOR)


State 96

   18 B_ANYWAY: B_INSTANCIATION B_END_OP .

    $default  reduce using rule 18 (B_ANYWAY)


State 97

   17 B_ANYWAY: B_INSTRUCTION B_END_OP .

    $default  reduce using rule 17 (B_ANYWAY)


State 98

   43 B_CLO_BRACKET: CLO_BRACKET . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 111


State 99

   33 B_DEF_FUN: IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET .

    $default  reduce using rule 33 (B_DEF_FUN)


State 100

   12 B_CODE_BLOCK: B_ANYWAY B_CODE_BLOCK .

    $default  reduce using rule 12 (B_CODE_BLOCK)


State 101

   19 B_ANYWAY: B_FUNCTION B_END_OP .

    $default  reduce using rule 19 (B_ANYWAY)


State 102

   23 B_BLOCK_IF: B_INST_IF B_OPE_PAREN . B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET
   24           | B_INST_IF B_OPE_PAREN . B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_CONDITION  go to state 112
    B_OPERATION  go to state 113
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 103

   25 B_BLOCK_WHILE: B_INST_WHILE B_OPE_PAREN . B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_CONDITION  go to state 114
    B_OPERATION  go to state 113
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 104

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN . B_INSTANCIATION B_END_OP B_CONDITION B_END_OP B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    TYPE  shift, and go to state 8

    B_INSTANCIATION  go to state 115
    B_TYPE           go to state 83


State 105

   11 B_INSTRUCTION: B_INST B_OPERATION .
   26 B_OPERATION: B_OPERATION . OP_NUM B_DELIM B_OPERATION

    OP_NUM  shift, and go to state 63

    $default  reduce using rule 11 (B_INSTRUCTION)


State 106

   38 B_DEF_FUN_MAIN: B_TYPE_VOID FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 98

    B_CLO_BRACKET  go to state 116


State 107

   32 B_DEF_FUN: B_TYPE IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 98

    B_CLO_BRACKET  go to state 117


State 108

   39 B_FUN_ARGS: B_OPERATION B_COMMA . B_FUN_ARGS

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_OPERATION  go to state 88
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_FUN_ARGS   go to state 118
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 109

   31 B_FUNCTION: IDENT B_OPE_PAREN B_FUN_ARGS B_CLO_PAREN .

    $default  reduce using rule 31 (B_FUNCTION)


State 110

   26 B_OPERATION: B_OPERATION . OP_NUM B_DELIM B_OPERATION
   26            | B_OPERATION OP_NUM B_DELIM B_OPERATION .

    $default  reduce using rule 26 (B_OPERATION)


State 111

   43 B_CLO_BRACKET: CLO_BRACKET B_DELIM .

    $default  reduce using rule 43 (B_CLO_BRACKET)


State 112

   23 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION . B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET
   24           | B_INST_IF B_OPE_PAREN B_CONDITION . B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 42

    B_CLO_PAREN  go to state 119


State 113

   20 B_CONDITION: B_OPERATION .
   21            | B_OPERATION . B_CP_NUM B_OPERATION
   26 B_OPERATION: B_OPERATION . OP_NUM B_DELIM B_OPERATION

    OP_NUM  shift, and go to state 63
    CP_NUM  shift, and go to state 120

    $default  reduce using rule 20 (B_CONDITION)

    B_CP_NUM  go to state 121


State 114

   25 B_BLOCK_WHILE: B_INST_WHILE B_OPE_PAREN B_CONDITION . B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 42

    B_CLO_PAREN  go to state 122


State 115

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION . B_END_OP B_CONDITION B_END_OP B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    END_OP  shift, and go to state 25

    B_END_OP  go to state 123


State 116

   38 B_DEF_FUN_MAIN: B_TYPE_VOID FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET .

    $default  reduce using rule 38 (B_DEF_FUN_MAIN)


State 117

   32 B_DEF_FUN: B_TYPE IDENT B_OPE_PAREN B_DEF_FUN_ARGS B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET .

    $default  reduce using rule 32 (B_DEF_FUN)


State 118

   39 B_FUN_ARGS: B_OPERATION B_COMMA B_FUN_ARGS .

    $default  reduce using rule 39 (B_FUN_ARGS)


State 119

   23 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN . B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET
   24           | B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN . B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 124


State 120

   41 B_CP_NUM: CP_NUM . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 125


State 121

   21 B_CONDITION: B_OPERATION B_CP_NUM . B_OPERATION

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_OPERATION  go to state 126
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 122

   25 B_BLOCK_WHILE: B_INST_WHILE B_OPE_PAREN B_CONDITION B_CLO_PAREN . B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 127


State 123

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION B_END_OP . B_CONDITION B_END_OP B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_CONDITION  go to state 128
    B_OPERATION  go to state 113
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 124

   23 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET . B_CODE_BLOCK B_CLO_BRACKET
   24           | B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET . B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 66
    INST_IF     shift, and go to state 67
    INST_WHILE  shift, and go to state 68
    INST_FOR    shift, and go to state 69
    IDENT       shift, and go to state 70

    $default  reduce using rule 13 (B_CODE_BLOCK)

    B_INSTANCIATION  go to state 71
    B_INSTRUCTION    go to state 72
    B_CODE_BLOCK     go to state 129
    B_ANYWAY         go to state 74
    B_BLOCK_FOR      go to state 75
    B_BLOCK_IF       go to state 76
    B_BLOCK_WHILE    go to state 77
    B_FUNCTION       go to state 78
    B_INST_IF        go to state 79
    B_INST_WHILE     go to state 80
    B_INST_FOR       go to state 81
    B_INST           go to state 82
    B_TYPE           go to state 83


State 125

   41 B_CP_NUM: CP_NUM B_DELIM .

    $default  reduce using rule 41 (B_CP_NUM)


State 126

   21 B_CONDITION: B_OPERATION B_CP_NUM B_OPERATION .
   26 B_OPERATION: B_OPERATION . OP_NUM B_DELIM B_OPERATION

    OP_NUM  shift, and go to state 63

    $default  reduce using rule 21 (B_CONDITION)


State 127

   25 B_BLOCK_WHILE: B_INST_WHILE B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET . B_CODE_BLOCK B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 66
    INST_IF     shift, and go to state 67
    INST_WHILE  shift, and go to state 68
    INST_FOR    shift, and go to state 69
    IDENT       shift, and go to state 70

    $default  reduce using rule 13 (B_CODE_BLOCK)

    B_INSTANCIATION  go to state 71
    B_INSTRUCTION    go to state 72
    B_CODE_BLOCK     go to state 130
    B_ANYWAY         go to state 74
    B_BLOCK_FOR      go to state 75
    B_BLOCK_IF       go to state 76
    B_BLOCK_WHILE    go to state 77
    B_FUNCTION       go to state 78
    B_INST_IF        go to state 79
    B_INST_WHILE     go to state 80
    B_INST_FOR       go to state 81
    B_INST           go to state 82
    B_TYPE           go to state 83


State 128

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION B_END_OP B_CONDITION . B_END_OP B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    END_OP  shift, and go to state 25

    B_END_OP  go to state 131


State 129

   23 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK . B_CLO_BRACKET
   24           | B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK . B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 98

    B_CLO_BRACKET  go to state 132


State 130

   25 B_BLOCK_WHILE: B_INST_WHILE B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 98

    B_CLO_BRACKET  go to state 133


State 131

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION B_END_OP B_CONDITION B_END_OP . B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    IDENT  shift, and go to state 44

    B_CHANGE_VALUE  go to state 134
    B_IDENT         go to state 135


State 132

   23 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET .
   24           | B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET . B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    INST_ELSE  shift, and go to state 136

    $default  reduce using rule 23 (B_BLOCK_IF)

    B_INST_ELSE  go to state 137


State 133

   25 B_BLOCK_WHILE: B_INST_WHILE B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET .

    $default  reduce using rule 25 (B_BLOCK_WHILE)


State 134

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION B_END_OP B_CONDITION B_END_OP B_CHANGE_VALUE . B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 42

    B_CLO_PAREN  go to state 138


State 135

   10 B_CHANGE_VALUE: B_IDENT . B_OPERATOR_SET B_OPERATION

    OP_SET  shift, and go to state 40

    B_OPERATOR_SET  go to state 139


State 136

   45 B_INST_ELSE: INST_ELSE . B_DELIM

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 58 (B_DELIM)

    B_DELIM  go to state 140


State 137

   24 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE . B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 141


State 138

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION B_END_OP B_CONDITION B_END_OP B_CHANGE_VALUE B_CLO_PAREN . B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 142


State 139

   10 B_CHANGE_VALUE: B_IDENT B_OPERATOR_SET . B_OPERATION

    OPE_PAREN  shift, and go to state 21
    IDENT      shift, and go to state 49

    B_OPERATION  go to state 143
    B_RVALUE     go to state 51
    B_FUNCTION   go to state 52
    B_OPE_PAREN  go to state 53
    B_IDENT      go to state 54


State 140

   45 B_INST_ELSE: INST_ELSE B_DELIM .

    $default  reduce using rule 45 (B_INST_ELSE)


State 141

   24 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET . B_CODE_BLOCK B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 66
    INST_IF     shift, and go to state 67
    INST_WHILE  shift, and go to state 68
    INST_FOR    shift, and go to state 69
    IDENT       shift, and go to state 70

    $default  reduce using rule 13 (B_CODE_BLOCK)

    B_INSTANCIATION  go to state 71
    B_INSTRUCTION    go to state 72
    B_CODE_BLOCK     go to state 144
    B_ANYWAY         go to state 74
    B_BLOCK_FOR      go to state 75
    B_BLOCK_IF       go to state 76
    B_BLOCK_WHILE    go to state 77
    B_FUNCTION       go to state 78
    B_INST_IF        go to state 79
    B_INST_WHILE     go to state 80
    B_INST_FOR       go to state 81
    B_INST           go to state 82
    B_TYPE           go to state 83


State 142

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION B_END_OP B_CONDITION B_END_OP B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET . B_CODE_BLOCK B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 66
    INST_IF     shift, and go to state 67
    INST_WHILE  shift, and go to state 68
    INST_FOR    shift, and go to state 69
    IDENT       shift, and go to state 70

    $default  reduce using rule 13 (B_CODE_BLOCK)

    B_INSTANCIATION  go to state 71
    B_INSTRUCTION    go to state 72
    B_CODE_BLOCK     go to state 145
    B_ANYWAY         go to state 74
    B_BLOCK_FOR      go to state 75
    B_BLOCK_IF       go to state 76
    B_BLOCK_WHILE    go to state 77
    B_FUNCTION       go to state 78
    B_INST_IF        go to state 79
    B_INST_WHILE     go to state 80
    B_INST_FOR       go to state 81
    B_INST           go to state 82
    B_TYPE           go to state 83


State 143

   10 B_CHANGE_VALUE: B_IDENT B_OPERATOR_SET B_OPERATION .
   26 B_OPERATION: B_OPERATION . OP_NUM B_DELIM B_OPERATION

    OP_NUM  shift, and go to state 63

    $default  reduce using rule 10 (B_CHANGE_VALUE)


State 144

   24 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 98

    B_CLO_BRACKET  go to state 146


State 145

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION B_END_OP B_CONDITION B_END_OP B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 98

    B_CLO_BRACKET  go to state 147


State 146

   24 B_BLOCK_IF: B_INST_IF B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET B_INST_ELSE B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET .

    $default  reduce using rule 24 (B_BLOCK_IF)


State 147

   22 B_BLOCK_FOR: B_INST_FOR B_OPE_PAREN B_INSTANCIATION B_END_OP B_CONDITION B_END_OP B_CHANGE_VALUE B_CLO_PAREN B_OPE_BRACKET B_CODE_BLOCK B_CLO_BRACKET .

    $default  reduce using rule 22 (B_BLOCK_FOR)
