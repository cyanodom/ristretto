Terminals unused in grammar

    BOOL_TYPE
    STR_TYPE


Grammar

    0 $accept: B_FULL_TEXT $end

    1 B_FULL_TEXT: B_D TEXT

    2 TEXT: B_DEF_ROOT TEXT
    3     | %empty

    4 B_DEF_ROOT: B_TYPE IDENT B_TO_DEF_FUN_OR_VAR
    5           | B_TYPE_VOID B_TO_DEF_FUN_BUT_VOID_PAREN

    6 B_TO_DEF_FUN_OR_VAR: B_D B_DEF_VAR_BUT_TYPE_B_D
    7                    | B_OPE_PAREN B_DEF_FUN_BUT_TYPE_PAREN

    8 B_TO_DEF_FUN_BUT_VOID_PAREN: IDENT B_OPE_PAREN B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET
    9                            | FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

   10 B_DEF_FUN_BUT_TYPE_PAREN: B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION B_CLO_BRACKET

   11 B_DEF_VAR_BUT_TYPE_B_D: B_OPERATOR_SET B_RVALUE B_END_OP

   12 B_LIST_DEF_ARGS_FUN: B_TYPE_VOID
   13                    | B_TYPE B_IDENT B_LIST_REST_ARGS_FUN

   14 B_LIST_REST_ARGS_FUN: B_COMMA B_TYPE B_IDENT B_LIST_REST_ARGS_FUN
   15                     | %empty

   16 B_INSIDE_A_FUNCTION_VOID: B_BLOCK_CODE

   17 B_INSIDE_A_FUNCTION: B_BLOCK_CODE

   18 B_BLOCK_CODE: B_PART_BLOCK B_BLOCK_CODE
   19             | %empty

   20 B_PART_BLOCK: B_TYPE B_IDENT B_DEF_VAR_BUT_IDENT
   21             | B_IDENT B_SET_VAR
   22             | B_INST_FOR B_FOR_LOOP
   23             | B_INST_IF B_IF_BLOCK
   24             | B_INST_WHILE B_WHILE_LOOP
   25             | B_INST_LINE

   26 B_INST_LINE: B_INST B_RVALUE B_END_OP

   27 B_DEF_VAR_BUT_IDENT: B_OPERATOR_SET B_RVALUE B_END_OP

   28 B_SET_VAR: B_OPERATOR_SET B_RVALUE B_END_OP

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

   30 B_IF_BLOCK: B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET B_POTENTIAL_ELSE

   31 B_POTENTIAL_ELSE: B_INST_ELSE B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET
   32                 | %empty

   33 B_WHILE_LOOP: B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

   34 B_CONDITION: B_RVALUE B_REST_COND

   35 B_REST_COND: B_CP_NUM B_RVALUE
   36            | %empty

   37 B_RVALUE: B_RVALUE OP_NUM B_D B_RVALUE
   38         | B_OPE_PAREN B_RVALUE B_CLO_PAREN
   39         | B_FUN_VALUE
   40         | B_VAR_VALUE
   41         | B_VALUE

   42 B_FUN_VALUE: IDENT B_OPE_PAREN B_FUN_PAREN_CONTENT B_CLO_PAREN

   43 B_FUN_PAREN_CONTENT: %empty
   44                    | B_FUN_PAREN_CONTENT_NOT_EMPTY

   45 B_FUN_PAREN_CONTENT_NOT_EMPTY: B_RVALUE B_COMMA B_FUN_PAREN_CONTENT_NOT_EMPTY
   46                              | B_RVALUE

   47 B_VAR_VALUE: B_IDENT

   48 B_VALUE: B_FLOAT_TYPE
   49        | B_INT_TYPE

   50 B_CP_NUM: CP_NUM B_D

   51 B_OPE_BRACKET: OPE_BRACKET B_D

   52 B_CLO_BRACKET: CLO_BRACKET B_D

   53 B_INST_IF: INST_IF B_D

   54 B_INST_ELSE: INST_ELSE B_D

   55 B_INST_WHILE: INST_WHILE B_D

   56 B_INST_FOR: INST_FOR B_D

   57 B_END_OP: END_OP B_D

   58 B_INST: INST B_D

   59 B_COMMA: COMMA B_D

   60 B_OPE_PAREN: OPE_PAREN B_D

   61 B_CLO_PAREN: CLO_PAREN B_D

   62 B_OPERATOR_SET: OP_SET B_D

   63 B_IDENT: IDENT B_D

   64 B_TYPE_VOID: TYPE_VOID B_D

   65 B_FLOAT_TYPE: FLOAT_TYPE B_D

   66 B_INT_TYPE: INT_TYPE B_D

   67 B_TYPE: TYPE B_D

   68 B_D: DELIM B_D
   69    | %empty
   70    | SHORT_COMMENT
   71    | LONG_COMMENT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DELIM (258) 68
    END_OP (259) 57
    TYPE <type_type> (260) 67
    TYPE_VOID (261) 64
    FUN_MAIN (262) 9
    INST <inst_type> (263) 58
    INST_IF (264) 53
    INST_ELSE (265) 54
    INST_WHILE (266) 55
    INST_FOR (267) 56
    OP_NUM <oper_num_type> (268) 37
    OP_SET (269) 62
    CP_NUM <cp_num_type> (270) 50
    OPE_PAREN (271) 60
    CLO_PAREN (272) 61
    OPE_BRACKET (273) 51
    CLO_BRACKET (274) 52
    BOOL_TYPE <b_val> (275)
    IDENT <indent_name> (276) 4 8 29 42 63
    STR_TYPE <s_val> (277)
    FLOAT_TYPE <f_val> (278) 65
    INT_TYPE <i_val> (279) 66
    LONG_COMMENT (280) 71
    SHORT_COMMENT (281) 70
    COMMA (282) 59


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    B_FULL_TEXT (29)
        on left: 1
        on right: 0
    TEXT (30)
        on left: 2 3
        on right: 1 2
    B_DEF_ROOT (31)
        on left: 4 5
        on right: 2
    B_TO_DEF_FUN_OR_VAR (32)
        on left: 6 7
        on right: 4
    B_TO_DEF_FUN_BUT_VOID_PAREN (33)
        on left: 8 9
        on right: 5
    B_DEF_FUN_BUT_TYPE_PAREN (34)
        on left: 10
        on right: 7
    B_DEF_VAR_BUT_TYPE_B_D (35)
        on left: 11
        on right: 6
    B_LIST_DEF_ARGS_FUN (36)
        on left: 12 13
        on right: 8 10
    B_LIST_REST_ARGS_FUN (37)
        on left: 14 15
        on right: 13 14
    B_INSIDE_A_FUNCTION_VOID (38)
        on left: 16
        on right: 8 9
    B_INSIDE_A_FUNCTION (39)
        on left: 17
        on right: 10
    B_BLOCK_CODE (40)
        on left: 18 19
        on right: 16 17 18 29 30 31 33
    B_PART_BLOCK (41)
        on left: 20 21 22 23 24 25
        on right: 18
    B_INST_LINE (42)
        on left: 26
        on right: 25
    B_DEF_VAR_BUT_IDENT (43)
        on left: 27
        on right: 20
    B_SET_VAR (44)
        on left: 28
        on right: 21 29
    B_FOR_LOOP (45)
        on left: 29
        on right: 22
    B_IF_BLOCK (46)
        on left: 30
        on right: 23
    B_POTENTIAL_ELSE (47)
        on left: 31 32
        on right: 30
    B_WHILE_LOOP (48)
        on left: 33
        on right: 24
    B_CONDITION (49)
        on left: 34
        on right: 29 30 33
    B_REST_COND (50)
        on left: 35 36
        on right: 34
    B_RVALUE (51)
        on left: 37 38 39 40 41
        on right: 11 26 27 28 29 34 35 37 38 45 46
    B_FUN_VALUE (52)
        on left: 42
        on right: 39
    B_FUN_PAREN_CONTENT (53)
        on left: 43 44
        on right: 42
    B_FUN_PAREN_CONTENT_NOT_EMPTY (54)
        on left: 45 46
        on right: 44 45
    B_VAR_VALUE (55)
        on left: 47
        on right: 40
    B_VALUE (56)
        on left: 48 49
        on right: 41
    B_CP_NUM (57)
        on left: 50
        on right: 35
    B_OPE_BRACKET (58)
        on left: 51
        on right: 8 9 10 29 30 31 33
    B_CLO_BRACKET (59)
        on left: 52
        on right: 8 9 10 29 30 31 33
    B_INST_IF (60)
        on left: 53
        on right: 23
    B_INST_ELSE (61)
        on left: 54
        on right: 31
    B_INST_WHILE (62)
        on left: 55
        on right: 24
    B_INST_FOR (63)
        on left: 56
        on right: 22
    B_END_OP (64)
        on left: 57
        on right: 11 26 27 28 29
    B_INST (65)
        on left: 58
        on right: 26
    B_COMMA (66)
        on left: 59
        on right: 14 45
    B_OPE_PAREN (67)
        on left: 60
        on right: 7 8 9 29 30 33 38 42
    B_CLO_PAREN (68)
        on left: 61
        on right: 8 9 10 29 30 33 38 42
    B_OPERATOR_SET (69)
        on left: 62
        on right: 11 27 28 29
    B_IDENT (70)
        on left: 63
        on right: 13 14 20 21 29 47
    B_TYPE_VOID (71)
        on left: 64
        on right: 5 9 12
    B_FLOAT_TYPE (72)
        on left: 65
        on right: 48
    B_INT_TYPE (73)
        on left: 66
        on right: 49
    B_TYPE <type_type> (74)
        on left: 67
        on right: 4 13 14 20 29
    B_D (75)
        on left: 68 69 70 71
        on right: 1 6 37 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68


State 0

    0 $accept: . B_FULL_TEXT $end

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_FULL_TEXT  go to state 4
    B_D          go to state 5


State 1

   68 B_D: DELIM . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 6


State 2

   71 B_D: LONG_COMMENT .

    $default  reduce using rule 71 (B_D)


State 3

   70 B_D: SHORT_COMMENT .

    $default  reduce using rule 70 (B_D)


State 4

    0 $accept: B_FULL_TEXT . $end

    $end  shift, and go to state 7


State 5

    1 B_FULL_TEXT: B_D . TEXT

    TYPE       shift, and go to state 8
    TYPE_VOID  shift, and go to state 9

    $default  reduce using rule 3 (TEXT)

    TEXT         go to state 10
    B_DEF_ROOT   go to state 11
    B_TYPE_VOID  go to state 12
    B_TYPE       go to state 13


State 6

   68 B_D: DELIM B_D .

    $default  reduce using rule 68 (B_D)


State 7

    0 $accept: B_FULL_TEXT $end .

    $default  accept


State 8

   67 B_TYPE: TYPE . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 14


State 9

   64 B_TYPE_VOID: TYPE_VOID . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 15


State 10

    1 B_FULL_TEXT: B_D TEXT .

    $default  reduce using rule 1 (B_FULL_TEXT)


State 11

    2 TEXT: B_DEF_ROOT . TEXT

    TYPE       shift, and go to state 8
    TYPE_VOID  shift, and go to state 9

    $default  reduce using rule 3 (TEXT)

    TEXT         go to state 16
    B_DEF_ROOT   go to state 11
    B_TYPE_VOID  go to state 12
    B_TYPE       go to state 13


State 12

    5 B_DEF_ROOT: B_TYPE_VOID . B_TO_DEF_FUN_BUT_VOID_PAREN

    FUN_MAIN  shift, and go to state 17
    IDENT     shift, and go to state 18

    B_TO_DEF_FUN_BUT_VOID_PAREN  go to state 19


State 13

    4 B_DEF_ROOT: B_TYPE . IDENT B_TO_DEF_FUN_OR_VAR

    IDENT  shift, and go to state 20


State 14

   67 B_TYPE: TYPE B_D .

    $default  reduce using rule 67 (B_TYPE)


State 15

   64 B_TYPE_VOID: TYPE_VOID B_D .

    $default  reduce using rule 64 (B_TYPE_VOID)


State 16

    2 TEXT: B_DEF_ROOT TEXT .

    $default  reduce using rule 2 (TEXT)


State 17

    9 B_TO_DEF_FUN_BUT_VOID_PAREN: FUN_MAIN . B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21

    B_OPE_PAREN  go to state 22


State 18

    8 B_TO_DEF_FUN_BUT_VOID_PAREN: IDENT . B_OPE_PAREN B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    OPE_PAREN  shift, and go to state 21

    B_OPE_PAREN  go to state 23


State 19

    5 B_DEF_ROOT: B_TYPE_VOID B_TO_DEF_FUN_BUT_VOID_PAREN .

    $default  reduce using rule 5 (B_DEF_ROOT)


State 20

    4 B_DEF_ROOT: B_TYPE IDENT . B_TO_DEF_FUN_OR_VAR

    DELIM          shift, and go to state 1
    OPE_PAREN      shift, and go to state 21
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_TO_DEF_FUN_OR_VAR  go to state 24
    B_OPE_PAREN          go to state 25
    B_D                  go to state 26


State 21

   60 B_OPE_PAREN: OPE_PAREN . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 27


State 22

    9 B_TO_DEF_FUN_BUT_VOID_PAREN: FUN_MAIN B_OPE_PAREN . B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    TYPE_VOID  shift, and go to state 9

    B_TYPE_VOID  go to state 28


State 23

    8 B_TO_DEF_FUN_BUT_VOID_PAREN: IDENT B_OPE_PAREN . B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    TYPE       shift, and go to state 8
    TYPE_VOID  shift, and go to state 9

    B_LIST_DEF_ARGS_FUN  go to state 29
    B_TYPE_VOID          go to state 30
    B_TYPE               go to state 31


State 24

    4 B_DEF_ROOT: B_TYPE IDENT B_TO_DEF_FUN_OR_VAR .

    $default  reduce using rule 4 (B_DEF_ROOT)


State 25

    7 B_TO_DEF_FUN_OR_VAR: B_OPE_PAREN . B_DEF_FUN_BUT_TYPE_PAREN

    TYPE       shift, and go to state 8
    TYPE_VOID  shift, and go to state 9

    B_DEF_FUN_BUT_TYPE_PAREN  go to state 32
    B_LIST_DEF_ARGS_FUN       go to state 33
    B_TYPE_VOID               go to state 30
    B_TYPE                    go to state 31


State 26

    6 B_TO_DEF_FUN_OR_VAR: B_D . B_DEF_VAR_BUT_TYPE_B_D

    OP_SET  shift, and go to state 34

    B_DEF_VAR_BUT_TYPE_B_D  go to state 35
    B_OPERATOR_SET          go to state 36


State 27

   60 B_OPE_PAREN: OPE_PAREN B_D .

    $default  reduce using rule 60 (B_OPE_PAREN)


State 28

    9 B_TO_DEF_FUN_BUT_VOID_PAREN: FUN_MAIN B_OPE_PAREN B_TYPE_VOID . B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 37

    B_CLO_PAREN  go to state 38


State 29

    8 B_TO_DEF_FUN_BUT_VOID_PAREN: IDENT B_OPE_PAREN B_LIST_DEF_ARGS_FUN . B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 37

    B_CLO_PAREN  go to state 39


State 30

   12 B_LIST_DEF_ARGS_FUN: B_TYPE_VOID .

    $default  reduce using rule 12 (B_LIST_DEF_ARGS_FUN)


State 31

   13 B_LIST_DEF_ARGS_FUN: B_TYPE . B_IDENT B_LIST_REST_ARGS_FUN

    IDENT  shift, and go to state 40

    B_IDENT  go to state 41


State 32

    7 B_TO_DEF_FUN_OR_VAR: B_OPE_PAREN B_DEF_FUN_BUT_TYPE_PAREN .

    $default  reduce using rule 7 (B_TO_DEF_FUN_OR_VAR)


State 33

   10 B_DEF_FUN_BUT_TYPE_PAREN: B_LIST_DEF_ARGS_FUN . B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 37

    B_CLO_PAREN  go to state 42


State 34

   62 B_OPERATOR_SET: OP_SET . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 43


State 35

    6 B_TO_DEF_FUN_OR_VAR: B_D B_DEF_VAR_BUT_TYPE_B_D .

    $default  reduce using rule 6 (B_TO_DEF_FUN_OR_VAR)


State 36

   11 B_DEF_VAR_BUT_TYPE_B_D: B_OPERATOR_SET . B_RVALUE B_END_OP

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_RVALUE      go to state 47
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 37

   61 B_CLO_PAREN: CLO_PAREN . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 55


State 38

    9 B_TO_DEF_FUN_BUT_VOID_PAREN: FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN . B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 57


State 39

    8 B_TO_DEF_FUN_BUT_VOID_PAREN: IDENT B_OPE_PAREN B_LIST_DEF_ARGS_FUN B_CLO_PAREN . B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 58


State 40

   63 B_IDENT: IDENT . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 59


State 41

   13 B_LIST_DEF_ARGS_FUN: B_TYPE B_IDENT . B_LIST_REST_ARGS_FUN

    COMMA  shift, and go to state 60

    $default  reduce using rule 15 (B_LIST_REST_ARGS_FUN)

    B_LIST_REST_ARGS_FUN  go to state 61
    B_COMMA               go to state 62


State 42

   10 B_DEF_FUN_BUT_TYPE_PAREN: B_LIST_DEF_ARGS_FUN B_CLO_PAREN . B_OPE_BRACKET B_INSIDE_A_FUNCTION B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 63


State 43

   62 B_OPERATOR_SET: OP_SET B_D .

    $default  reduce using rule 62 (B_OPERATOR_SET)


State 44

   42 B_FUN_VALUE: IDENT . B_OPE_PAREN B_FUN_PAREN_CONTENT B_CLO_PAREN
   63 B_IDENT: IDENT . B_D

    DELIM          shift, and go to state 1
    OPE_PAREN      shift, and go to state 21
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_OPE_PAREN  go to state 64
    B_D          go to state 59


State 45

   65 B_FLOAT_TYPE: FLOAT_TYPE . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 65


State 46

   66 B_INT_TYPE: INT_TYPE . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 66


State 47

   11 B_DEF_VAR_BUT_TYPE_B_D: B_OPERATOR_SET B_RVALUE . B_END_OP
   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE

    END_OP  shift, and go to state 67
    OP_NUM  shift, and go to state 68

    B_END_OP  go to state 69


State 48

   39 B_RVALUE: B_FUN_VALUE .

    $default  reduce using rule 39 (B_RVALUE)


State 49

   40 B_RVALUE: B_VAR_VALUE .

    $default  reduce using rule 40 (B_RVALUE)


State 50

   41 B_RVALUE: B_VALUE .

    $default  reduce using rule 41 (B_RVALUE)


State 51

   38 B_RVALUE: B_OPE_PAREN . B_RVALUE B_CLO_PAREN

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_RVALUE      go to state 70
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 52

   47 B_VAR_VALUE: B_IDENT .

    $default  reduce using rule 47 (B_VAR_VALUE)


State 53

   48 B_VALUE: B_FLOAT_TYPE .

    $default  reduce using rule 48 (B_VALUE)


State 54

   49 B_VALUE: B_INT_TYPE .

    $default  reduce using rule 49 (B_VALUE)


State 55

   61 B_CLO_PAREN: CLO_PAREN B_D .

    $default  reduce using rule 61 (B_CLO_PAREN)


State 56

   51 B_OPE_BRACKET: OPE_BRACKET . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 71


State 57

    9 B_TO_DEF_FUN_BUT_VOID_PAREN: FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET . B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 72
    INST_IF     shift, and go to state 73
    INST_WHILE  shift, and go to state 74
    INST_FOR    shift, and go to state 75
    IDENT       shift, and go to state 40

    $default  reduce using rule 19 (B_BLOCK_CODE)

    B_INSIDE_A_FUNCTION_VOID  go to state 76
    B_BLOCK_CODE              go to state 77
    B_PART_BLOCK              go to state 78
    B_INST_LINE               go to state 79
    B_INST_IF                 go to state 80
    B_INST_WHILE              go to state 81
    B_INST_FOR                go to state 82
    B_INST                    go to state 83
    B_IDENT                   go to state 84
    B_TYPE                    go to state 85


State 58

    8 B_TO_DEF_FUN_BUT_VOID_PAREN: IDENT B_OPE_PAREN B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET . B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 72
    INST_IF     shift, and go to state 73
    INST_WHILE  shift, and go to state 74
    INST_FOR    shift, and go to state 75
    IDENT       shift, and go to state 40

    $default  reduce using rule 19 (B_BLOCK_CODE)

    B_INSIDE_A_FUNCTION_VOID  go to state 86
    B_BLOCK_CODE              go to state 77
    B_PART_BLOCK              go to state 78
    B_INST_LINE               go to state 79
    B_INST_IF                 go to state 80
    B_INST_WHILE              go to state 81
    B_INST_FOR                go to state 82
    B_INST                    go to state 83
    B_IDENT                   go to state 84
    B_TYPE                    go to state 85


State 59

   63 B_IDENT: IDENT B_D .

    $default  reduce using rule 63 (B_IDENT)


State 60

   59 B_COMMA: COMMA . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 87


State 61

   13 B_LIST_DEF_ARGS_FUN: B_TYPE B_IDENT B_LIST_REST_ARGS_FUN .

    $default  reduce using rule 13 (B_LIST_DEF_ARGS_FUN)


State 62

   14 B_LIST_REST_ARGS_FUN: B_COMMA . B_TYPE B_IDENT B_LIST_REST_ARGS_FUN

    TYPE  shift, and go to state 8

    B_TYPE  go to state 88


State 63

   10 B_DEF_FUN_BUT_TYPE_PAREN: B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET . B_INSIDE_A_FUNCTION B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 72
    INST_IF     shift, and go to state 73
    INST_WHILE  shift, and go to state 74
    INST_FOR    shift, and go to state 75
    IDENT       shift, and go to state 40

    $default  reduce using rule 19 (B_BLOCK_CODE)

    B_INSIDE_A_FUNCTION  go to state 89
    B_BLOCK_CODE         go to state 90
    B_PART_BLOCK         go to state 78
    B_INST_LINE          go to state 79
    B_INST_IF            go to state 80
    B_INST_WHILE         go to state 81
    B_INST_FOR           go to state 82
    B_INST               go to state 83
    B_IDENT              go to state 84
    B_TYPE               go to state 85


State 64

   42 B_FUN_VALUE: IDENT B_OPE_PAREN . B_FUN_PAREN_CONTENT B_CLO_PAREN

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    $default  reduce using rule 43 (B_FUN_PAREN_CONTENT)

    B_RVALUE                       go to state 91
    B_FUN_VALUE                    go to state 48
    B_FUN_PAREN_CONTENT            go to state 92
    B_FUN_PAREN_CONTENT_NOT_EMPTY  go to state 93
    B_VAR_VALUE                    go to state 49
    B_VALUE                        go to state 50
    B_OPE_PAREN                    go to state 51
    B_IDENT                        go to state 52
    B_FLOAT_TYPE                   go to state 53
    B_INT_TYPE                     go to state 54


State 65

   65 B_FLOAT_TYPE: FLOAT_TYPE B_D .

    $default  reduce using rule 65 (B_FLOAT_TYPE)


State 66

   66 B_INT_TYPE: INT_TYPE B_D .

    $default  reduce using rule 66 (B_INT_TYPE)


State 67

   57 B_END_OP: END_OP . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 94


State 68

   37 B_RVALUE: B_RVALUE OP_NUM . B_D B_RVALUE

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 95


State 69

   11 B_DEF_VAR_BUT_TYPE_B_D: B_OPERATOR_SET B_RVALUE B_END_OP .

    $default  reduce using rule 11 (B_DEF_VAR_BUT_TYPE_B_D)


State 70

   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE
   38         | B_OPE_PAREN B_RVALUE . B_CLO_PAREN

    OP_NUM     shift, and go to state 68
    CLO_PAREN  shift, and go to state 37

    B_CLO_PAREN  go to state 96


State 71

   51 B_OPE_BRACKET: OPE_BRACKET B_D .

    $default  reduce using rule 51 (B_OPE_BRACKET)


State 72

   58 B_INST: INST . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 97


State 73

   53 B_INST_IF: INST_IF . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 98


State 74

   55 B_INST_WHILE: INST_WHILE . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 99


State 75

   56 B_INST_FOR: INST_FOR . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 100


State 76

    9 B_TO_DEF_FUN_BUT_VOID_PAREN: FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 101

    B_CLO_BRACKET  go to state 102


State 77

   16 B_INSIDE_A_FUNCTION_VOID: B_BLOCK_CODE .

    $default  reduce using rule 16 (B_INSIDE_A_FUNCTION_VOID)


State 78

   18 B_BLOCK_CODE: B_PART_BLOCK . B_BLOCK_CODE

    TYPE        shift, and go to state 8
    INST        shift, and go to state 72
    INST_IF     shift, and go to state 73
    INST_WHILE  shift, and go to state 74
    INST_FOR    shift, and go to state 75
    IDENT       shift, and go to state 40

    $default  reduce using rule 19 (B_BLOCK_CODE)

    B_BLOCK_CODE  go to state 103
    B_PART_BLOCK  go to state 78
    B_INST_LINE   go to state 79
    B_INST_IF     go to state 80
    B_INST_WHILE  go to state 81
    B_INST_FOR    go to state 82
    B_INST        go to state 83
    B_IDENT       go to state 84
    B_TYPE        go to state 85


State 79

   25 B_PART_BLOCK: B_INST_LINE .

    $default  reduce using rule 25 (B_PART_BLOCK)


State 80

   23 B_PART_BLOCK: B_INST_IF . B_IF_BLOCK

    OPE_PAREN  shift, and go to state 21

    B_IF_BLOCK   go to state 104
    B_OPE_PAREN  go to state 105


State 81

   24 B_PART_BLOCK: B_INST_WHILE . B_WHILE_LOOP

    OPE_PAREN  shift, and go to state 21

    B_WHILE_LOOP  go to state 106
    B_OPE_PAREN   go to state 107


State 82

   22 B_PART_BLOCK: B_INST_FOR . B_FOR_LOOP

    OPE_PAREN  shift, and go to state 21

    B_FOR_LOOP   go to state 108
    B_OPE_PAREN  go to state 109


State 83

   26 B_INST_LINE: B_INST . B_RVALUE B_END_OP

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_RVALUE      go to state 110
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 84

   21 B_PART_BLOCK: B_IDENT . B_SET_VAR

    OP_SET  shift, and go to state 34

    B_SET_VAR       go to state 111
    B_OPERATOR_SET  go to state 112


State 85

   20 B_PART_BLOCK: B_TYPE . B_IDENT B_DEF_VAR_BUT_IDENT

    IDENT  shift, and go to state 40

    B_IDENT  go to state 113


State 86

    8 B_TO_DEF_FUN_BUT_VOID_PAREN: IDENT B_OPE_PAREN B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 101

    B_CLO_BRACKET  go to state 114


State 87

   59 B_COMMA: COMMA B_D .

    $default  reduce using rule 59 (B_COMMA)


State 88

   14 B_LIST_REST_ARGS_FUN: B_COMMA B_TYPE . B_IDENT B_LIST_REST_ARGS_FUN

    IDENT  shift, and go to state 40

    B_IDENT  go to state 115


State 89

   10 B_DEF_FUN_BUT_TYPE_PAREN: B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 101

    B_CLO_BRACKET  go to state 116


State 90

   17 B_INSIDE_A_FUNCTION: B_BLOCK_CODE .

    $default  reduce using rule 17 (B_INSIDE_A_FUNCTION)


State 91

   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE
   45 B_FUN_PAREN_CONTENT_NOT_EMPTY: B_RVALUE . B_COMMA B_FUN_PAREN_CONTENT_NOT_EMPTY
   46                              | B_RVALUE .

    OP_NUM  shift, and go to state 68
    COMMA   shift, and go to state 60

    $default  reduce using rule 46 (B_FUN_PAREN_CONTENT_NOT_EMPTY)

    B_COMMA  go to state 117


State 92

   42 B_FUN_VALUE: IDENT B_OPE_PAREN B_FUN_PAREN_CONTENT . B_CLO_PAREN

    CLO_PAREN  shift, and go to state 37

    B_CLO_PAREN  go to state 118


State 93

   44 B_FUN_PAREN_CONTENT: B_FUN_PAREN_CONTENT_NOT_EMPTY .

    $default  reduce using rule 44 (B_FUN_PAREN_CONTENT)


State 94

   57 B_END_OP: END_OP B_D .

    $default  reduce using rule 57 (B_END_OP)


State 95

   37 B_RVALUE: B_RVALUE OP_NUM B_D . B_RVALUE

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_RVALUE      go to state 119
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 96

   38 B_RVALUE: B_OPE_PAREN B_RVALUE B_CLO_PAREN .

    $default  reduce using rule 38 (B_RVALUE)


State 97

   58 B_INST: INST B_D .

    $default  reduce using rule 58 (B_INST)


State 98

   53 B_INST_IF: INST_IF B_D .

    $default  reduce using rule 53 (B_INST_IF)


State 99

   55 B_INST_WHILE: INST_WHILE B_D .

    $default  reduce using rule 55 (B_INST_WHILE)


State 100

   56 B_INST_FOR: INST_FOR B_D .

    $default  reduce using rule 56 (B_INST_FOR)


State 101

   52 B_CLO_BRACKET: CLO_BRACKET . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 120


State 102

    9 B_TO_DEF_FUN_BUT_VOID_PAREN: FUN_MAIN B_OPE_PAREN B_TYPE_VOID B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET .

    $default  reduce using rule 9 (B_TO_DEF_FUN_BUT_VOID_PAREN)


State 103

   18 B_BLOCK_CODE: B_PART_BLOCK B_BLOCK_CODE .

    $default  reduce using rule 18 (B_BLOCK_CODE)


State 104

   23 B_PART_BLOCK: B_INST_IF B_IF_BLOCK .

    $default  reduce using rule 23 (B_PART_BLOCK)


State 105

   30 B_IF_BLOCK: B_OPE_PAREN . B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET B_POTENTIAL_ELSE

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_CONDITION   go to state 121
    B_RVALUE      go to state 122
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 106

   24 B_PART_BLOCK: B_INST_WHILE B_WHILE_LOOP .

    $default  reduce using rule 24 (B_PART_BLOCK)


State 107

   33 B_WHILE_LOOP: B_OPE_PAREN . B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_CONDITION   go to state 123
    B_RVALUE      go to state 122
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 108

   22 B_PART_BLOCK: B_INST_FOR B_FOR_LOOP .

    $default  reduce using rule 22 (B_PART_BLOCK)


State 109

   29 B_FOR_LOOP: B_OPE_PAREN . B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    TYPE  shift, and go to state 8

    B_TYPE  go to state 124


State 110

   26 B_INST_LINE: B_INST B_RVALUE . B_END_OP
   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE

    END_OP  shift, and go to state 67
    OP_NUM  shift, and go to state 68

    B_END_OP  go to state 125


State 111

   21 B_PART_BLOCK: B_IDENT B_SET_VAR .

    $default  reduce using rule 21 (B_PART_BLOCK)


State 112

   28 B_SET_VAR: B_OPERATOR_SET . B_RVALUE B_END_OP

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_RVALUE      go to state 126
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 113

   20 B_PART_BLOCK: B_TYPE B_IDENT . B_DEF_VAR_BUT_IDENT

    OP_SET  shift, and go to state 34

    B_DEF_VAR_BUT_IDENT  go to state 127
    B_OPERATOR_SET       go to state 128


State 114

    8 B_TO_DEF_FUN_BUT_VOID_PAREN: IDENT B_OPE_PAREN B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION_VOID B_CLO_BRACKET .

    $default  reduce using rule 8 (B_TO_DEF_FUN_BUT_VOID_PAREN)


State 115

   14 B_LIST_REST_ARGS_FUN: B_COMMA B_TYPE B_IDENT . B_LIST_REST_ARGS_FUN

    COMMA  shift, and go to state 60

    $default  reduce using rule 15 (B_LIST_REST_ARGS_FUN)

    B_LIST_REST_ARGS_FUN  go to state 129
    B_COMMA               go to state 62


State 116

   10 B_DEF_FUN_BUT_TYPE_PAREN: B_LIST_DEF_ARGS_FUN B_CLO_PAREN B_OPE_BRACKET B_INSIDE_A_FUNCTION B_CLO_BRACKET .

    $default  reduce using rule 10 (B_DEF_FUN_BUT_TYPE_PAREN)


State 117

   45 B_FUN_PAREN_CONTENT_NOT_EMPTY: B_RVALUE B_COMMA . B_FUN_PAREN_CONTENT_NOT_EMPTY

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_RVALUE                       go to state 91
    B_FUN_VALUE                    go to state 48
    B_FUN_PAREN_CONTENT_NOT_EMPTY  go to state 130
    B_VAR_VALUE                    go to state 49
    B_VALUE                        go to state 50
    B_OPE_PAREN                    go to state 51
    B_IDENT                        go to state 52
    B_FLOAT_TYPE                   go to state 53
    B_INT_TYPE                     go to state 54


State 118

   42 B_FUN_VALUE: IDENT B_OPE_PAREN B_FUN_PAREN_CONTENT B_CLO_PAREN .

    $default  reduce using rule 42 (B_FUN_VALUE)


State 119

   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE
   37         | B_RVALUE OP_NUM B_D B_RVALUE .

    $default  reduce using rule 37 (B_RVALUE)


State 120

   52 B_CLO_BRACKET: CLO_BRACKET B_D .

    $default  reduce using rule 52 (B_CLO_BRACKET)


State 121

   30 B_IF_BLOCK: B_OPE_PAREN B_CONDITION . B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET B_POTENTIAL_ELSE

    CLO_PAREN  shift, and go to state 37

    B_CLO_PAREN  go to state 131


State 122

   34 B_CONDITION: B_RVALUE . B_REST_COND
   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE

    OP_NUM  shift, and go to state 68
    CP_NUM  shift, and go to state 132

    $default  reduce using rule 36 (B_REST_COND)

    B_REST_COND  go to state 133
    B_CP_NUM     go to state 134


State 123

   33 B_WHILE_LOOP: B_OPE_PAREN B_CONDITION . B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 37

    B_CLO_PAREN  go to state 135


State 124

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE . B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    IDENT  shift, and go to state 40

    B_IDENT  go to state 136


State 125

   26 B_INST_LINE: B_INST B_RVALUE B_END_OP .

    $default  reduce using rule 26 (B_INST_LINE)


State 126

   28 B_SET_VAR: B_OPERATOR_SET B_RVALUE . B_END_OP
   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE

    END_OP  shift, and go to state 67
    OP_NUM  shift, and go to state 68

    B_END_OP  go to state 137


State 127

   20 B_PART_BLOCK: B_TYPE B_IDENT B_DEF_VAR_BUT_IDENT .

    $default  reduce using rule 20 (B_PART_BLOCK)


State 128

   27 B_DEF_VAR_BUT_IDENT: B_OPERATOR_SET . B_RVALUE B_END_OP

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_RVALUE      go to state 138
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 129

   14 B_LIST_REST_ARGS_FUN: B_COMMA B_TYPE B_IDENT B_LIST_REST_ARGS_FUN .

    $default  reduce using rule 14 (B_LIST_REST_ARGS_FUN)


State 130

   45 B_FUN_PAREN_CONTENT_NOT_EMPTY: B_RVALUE B_COMMA B_FUN_PAREN_CONTENT_NOT_EMPTY .

    $default  reduce using rule 45 (B_FUN_PAREN_CONTENT_NOT_EMPTY)


State 131

   30 B_IF_BLOCK: B_OPE_PAREN B_CONDITION B_CLO_PAREN . B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET B_POTENTIAL_ELSE

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 139


State 132

   50 B_CP_NUM: CP_NUM . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 140


State 133

   34 B_CONDITION: B_RVALUE B_REST_COND .

    $default  reduce using rule 34 (B_CONDITION)


State 134

   35 B_REST_COND: B_CP_NUM . B_RVALUE

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_RVALUE      go to state 141
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 135

   33 B_WHILE_LOOP: B_OPE_PAREN B_CONDITION B_CLO_PAREN . B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 142


State 136

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT . B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    OP_SET  shift, and go to state 34

    B_OPERATOR_SET  go to state 143


State 137

   28 B_SET_VAR: B_OPERATOR_SET B_RVALUE B_END_OP .

    $default  reduce using rule 28 (B_SET_VAR)


State 138

   27 B_DEF_VAR_BUT_IDENT: B_OPERATOR_SET B_RVALUE . B_END_OP
   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE

    END_OP  shift, and go to state 67
    OP_NUM  shift, and go to state 68

    B_END_OP  go to state 144


State 139

   30 B_IF_BLOCK: B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET . B_BLOCK_CODE B_CLO_BRACKET B_POTENTIAL_ELSE

    TYPE        shift, and go to state 8
    INST        shift, and go to state 72
    INST_IF     shift, and go to state 73
    INST_WHILE  shift, and go to state 74
    INST_FOR    shift, and go to state 75
    IDENT       shift, and go to state 40

    $default  reduce using rule 19 (B_BLOCK_CODE)

    B_BLOCK_CODE  go to state 145
    B_PART_BLOCK  go to state 78
    B_INST_LINE   go to state 79
    B_INST_IF     go to state 80
    B_INST_WHILE  go to state 81
    B_INST_FOR    go to state 82
    B_INST        go to state 83
    B_IDENT       go to state 84
    B_TYPE        go to state 85


State 140

   50 B_CP_NUM: CP_NUM B_D .

    $default  reduce using rule 50 (B_CP_NUM)


State 141

   35 B_REST_COND: B_CP_NUM B_RVALUE .
   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE

    OP_NUM  shift, and go to state 68

    $default  reduce using rule 35 (B_REST_COND)


State 142

   33 B_WHILE_LOOP: B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET . B_BLOCK_CODE B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 72
    INST_IF     shift, and go to state 73
    INST_WHILE  shift, and go to state 74
    INST_FOR    shift, and go to state 75
    IDENT       shift, and go to state 40

    $default  reduce using rule 19 (B_BLOCK_CODE)

    B_BLOCK_CODE  go to state 146
    B_PART_BLOCK  go to state 78
    B_INST_LINE   go to state 79
    B_INST_IF     go to state 80
    B_INST_WHILE  go to state 81
    B_INST_FOR    go to state 82
    B_INST        go to state 83
    B_IDENT       go to state 84
    B_TYPE        go to state 85


State 143

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET . B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_RVALUE      go to state 147
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 144

   27 B_DEF_VAR_BUT_IDENT: B_OPERATOR_SET B_RVALUE B_END_OP .

    $default  reduce using rule 27 (B_DEF_VAR_BUT_IDENT)


State 145

   30 B_IF_BLOCK: B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE . B_CLO_BRACKET B_POTENTIAL_ELSE

    CLO_BRACKET  shift, and go to state 101

    B_CLO_BRACKET  go to state 148


State 146

   33 B_WHILE_LOOP: B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 101

    B_CLO_BRACKET  go to state 149


State 147

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE . B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET
   37 B_RVALUE: B_RVALUE . OP_NUM B_D B_RVALUE

    END_OP  shift, and go to state 67
    OP_NUM  shift, and go to state 68

    B_END_OP  go to state 150


State 148

   30 B_IF_BLOCK: B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET . B_POTENTIAL_ELSE

    INST_ELSE  shift, and go to state 151

    $default  reduce using rule 32 (B_POTENTIAL_ELSE)

    B_POTENTIAL_ELSE  go to state 152
    B_INST_ELSE       go to state 153


State 149

   33 B_WHILE_LOOP: B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET .

    $default  reduce using rule 33 (B_WHILE_LOOP)


State 150

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP . B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    OPE_PAREN   shift, and go to state 21
    IDENT       shift, and go to state 44
    FLOAT_TYPE  shift, and go to state 45
    INT_TYPE    shift, and go to state 46

    B_CONDITION   go to state 154
    B_RVALUE      go to state 122
    B_FUN_VALUE   go to state 48
    B_VAR_VALUE   go to state 49
    B_VALUE       go to state 50
    B_OPE_PAREN   go to state 51
    B_IDENT       go to state 52
    B_FLOAT_TYPE  go to state 53
    B_INT_TYPE    go to state 54


State 151

   54 B_INST_ELSE: INST_ELSE . B_D

    DELIM          shift, and go to state 1
    LONG_COMMENT   shift, and go to state 2
    SHORT_COMMENT  shift, and go to state 3

    $default  reduce using rule 69 (B_D)

    B_D  go to state 155


State 152

   30 B_IF_BLOCK: B_OPE_PAREN B_CONDITION B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET B_POTENTIAL_ELSE .

    $default  reduce using rule 30 (B_IF_BLOCK)


State 153

   31 B_POTENTIAL_ELSE: B_INST_ELSE . B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 156


State 154

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION . B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    END_OP  shift, and go to state 67

    B_END_OP  go to state 157


State 155

   54 B_INST_ELSE: INST_ELSE B_D .

    $default  reduce using rule 54 (B_INST_ELSE)


State 156

   31 B_POTENTIAL_ELSE: B_INST_ELSE B_OPE_BRACKET . B_BLOCK_CODE B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 72
    INST_IF     shift, and go to state 73
    INST_WHILE  shift, and go to state 74
    INST_FOR    shift, and go to state 75
    IDENT       shift, and go to state 40

    $default  reduce using rule 19 (B_BLOCK_CODE)

    B_BLOCK_CODE  go to state 158
    B_PART_BLOCK  go to state 78
    B_INST_LINE   go to state 79
    B_INST_IF     go to state 80
    B_INST_WHILE  go to state 81
    B_INST_FOR    go to state 82
    B_INST        go to state 83
    B_IDENT       go to state 84
    B_TYPE        go to state 85


State 157

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP . IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    IDENT  shift, and go to state 159


State 158

   31 B_POTENTIAL_ELSE: B_INST_ELSE B_OPE_BRACKET B_BLOCK_CODE . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 101

    B_CLO_BRACKET  go to state 160


State 159

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT . B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    OP_SET  shift, and go to state 34

    B_SET_VAR       go to state 161
    B_OPERATOR_SET  go to state 112


State 160

   31 B_POTENTIAL_ELSE: B_INST_ELSE B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET .

    $default  reduce using rule 31 (B_POTENTIAL_ELSE)


State 161

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR . B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    CLO_PAREN  shift, and go to state 37

    B_CLO_PAREN  go to state 162


State 162

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN . B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET

    OPE_BRACKET  shift, and go to state 56

    B_OPE_BRACKET  go to state 163


State 163

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET . B_BLOCK_CODE B_CLO_BRACKET

    TYPE        shift, and go to state 8
    INST        shift, and go to state 72
    INST_IF     shift, and go to state 73
    INST_WHILE  shift, and go to state 74
    INST_FOR    shift, and go to state 75
    IDENT       shift, and go to state 40

    $default  reduce using rule 19 (B_BLOCK_CODE)

    B_BLOCK_CODE  go to state 164
    B_PART_BLOCK  go to state 78
    B_INST_LINE   go to state 79
    B_INST_IF     go to state 80
    B_INST_WHILE  go to state 81
    B_INST_FOR    go to state 82
    B_INST        go to state 83
    B_IDENT       go to state 84
    B_TYPE        go to state 85


State 164

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE . B_CLO_BRACKET

    CLO_BRACKET  shift, and go to state 101

    B_CLO_BRACKET  go to state 165


State 165

   29 B_FOR_LOOP: B_OPE_PAREN B_TYPE B_IDENT B_OPERATOR_SET B_RVALUE B_END_OP B_CONDITION B_END_OP IDENT B_SET_VAR B_CLO_PAREN B_OPE_BRACKET B_BLOCK_CODE B_CLO_BRACKET .

    $default  reduce using rule 29 (B_FOR_LOOP)
